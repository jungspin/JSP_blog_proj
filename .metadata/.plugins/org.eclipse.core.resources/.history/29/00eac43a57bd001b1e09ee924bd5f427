package com.cos.blog.domain.board;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.util.List;

import com.cos.blog.config.DBConn;
import com.cos.blog.domain.CrudDAO;
import com.cos.blog.domain.user.User;
import com.cos.blog.web.dto.BoardDetailDTO;

public class BoardDAO implements CrudDAO<Board> { // T는 변수

	private static BoardDAO instance = new BoardDAO();

	private BoardDAO() {
	} // 외부에서 new 하는걸 막음

	public static BoardDAO getInstance() {
		return instance;
	}

	// 상세보기시 Board 정보와 User 정보를 조인해서 가져올 함수
	// id만 알면 조인해서 가져오면 됨
	public BoardDetailDTO mDetail(int id) { // 내 필요에 의해 만든건 앞에 m을 붙여쥬자
		return null;
	}

	@Override
	public Board findById(int id) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<Board> findAll() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public int save(Board data) {
		
		String sql = "INSERT INTO boards(id, title, content, userid, created) VALUES(boards_seq.nextval,?,?,?,SYSDATE)";

		try {
			Connection conn = DBConn.디비연결(); 
			
			PreparedStatement pstmt = conn.prepareStatement(sql); 
			Board board = (Board) data;
			User user = new User();
			pstmt.setString(1, board.getTitle());
			pstmt.setString(2, board.getContent());
			pstmt.setInt(3, user.getId());

			return pstmt.executeUpdate(); // 변경된 행의 갯수 리턴
			// ㄴ 얘로 전송하면 내부적으로 커밋
			// pstmt.executeQuery(); // 커밋은 안일어나지만 결과를 리턴
		} catch (Exception e) {
			e.printStackTrace();
		}
		return -1;
	}

	@Override
	public int update(Board data) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public int deleteById() {
		// TODO Auto-generated method stub
		return 0;
	}

}
